# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'my_new_project'
version: '1.0.0'
config-version: 2

vars:
  # Time window for looking back at events (currently not set)
  event_lookback_window: null

  # Table name for page view data from Segment
  segment_page_views_table: 
    - stg_page_views

  # For BigQuery: how to partition tables (by day)
  segment_bigquery_partition_granularity: 'day'

  # Session tracking settings
  segment_inactivity_cutoff: 30 * 60           # 30 minutes in seconds
  segment_sessionization_trailing_window: 15    # 15 minute window

  # Marketing platform IDs
  google_ads_customer_ids: ['4664659690']      # Google Ads account ID
  facebook_ads_account_ids: ['237702918020237'] # Facebook Ads account ID
  
  # Attribution settings
  lookback_conversion_window: 60               # 60 day lookback window for conversions

  # Domain settings
  domain_hosts: [
    "head-boards.nl",
    "go.head-boards.nl"
  ]

  # URLs to exclude from referral tracking
  referral_exclusions: [
    'calendly.com',
    'tagassistant.google.com',
    ''
  ]

# This setting configures which "profile" dbt uses for this project.
profile: 'default'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In dbt, the default materialization for a model is a view. This means, when you run 
# dbt run or dbt build, all of your models will be built as a view in your data platform. 
# The configuration below will override this setting for models in the example folder to 
# instead be materialized as tables. Any models you add to the root of the models folder will 
# continue to be built as views. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.

models:
  my_new_project:
    # Applies to all files under models/example/
    marts:
      +materialized: table

 